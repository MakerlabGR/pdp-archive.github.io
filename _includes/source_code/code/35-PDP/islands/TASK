TASK(
   name = "islands",
   test_count = 21,
   files_dir = "testdata/35-PDP/islands/",
   input_file = "islands.in",
   output_file = "islands.out",
   time_limit = 1,
   mem_limit = 256,
   solutions = [
      SOLUTION(
         name = "brute_10p",
         source = "brute_10p.cc",
         passes_up_to = 3,
         lang = "c++",
      ),
      SOLUTION(
         name = "prefxsum_20p",
         source = "prefxsum_20p.cc",
         passes_only = [4,5,6,7],
         lang = "c++",
      ),
      SOLUTION(
         name = "segtree_30p_NlogN2",
         source = "segtree_30p_NlogN2.cc",
         passes_only = [2,8,9,10,11,12],
         lang = "c++",
      ),
      SOLUTION(
         name = "segtree_30p_NlogN",
         source = "segtree_30p_NlogN.cc",
         passes_only = [2,8,9,10,11,12],
         lang = "c++",
      ),
      SOLUTION(
         name = "sqrtdecomp_NsqrtNlogN",
         source = "sqrtdecomp_NsqrtNlogN.cc",
         passes_only = [1,2,3,5,9,13,15,17,19],
         lang = "c++",
      ),
      SOLUTION(
         name = "sqrtdecomp_NsqrtN",
         source = "sqrtdecomp_NsqrtN.cc",
         passes_all,
         lang = "c++",
      ),
      SOLUTION(
         name = "lazy_NlogN2",
         source = "lazy_NlogN2.cc",
         passes_only = [1,2,3,4,5,6,7,8,9,10,13,14,15,17,19],
         lang = "c++",
      ),
      SOLUTION(
         name = "lazy_NlogN",
         source = "lazy_NlogN.cc",
         passes_all,
         lang = "c++",
      ),
   ]
)